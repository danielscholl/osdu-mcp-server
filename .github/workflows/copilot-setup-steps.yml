name: "Copilot Setup Steps"

# Allow testing of the setup steps from your repository's "Actions" tab.
on: workflow_dispatch

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # Need contents: read to clone the repository and install dependencies
      contents: read

    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install uv package manager
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          # Install all dependencies including dev tools
          uv sync --frozen
          uv pip install -e .[dev]

      - name: Verify installation
        run: |
          # Verify key tools are available
          uv run python --version
          uv run pytest --version
          uv run mypy --version
          uv run black --version
          uv run ruff --version

      - name: Run initial checks
        run: |
          # Run type checking to ensure environment is valid
          uv run mypy . || echo "Type checking completed with warnings"

          # Ensure code is properly formatted
          uv run black --check src/ tests/ || echo "Code formatting check completed"

          # Run ruff linting
          uv run ruff check src/ tests/ || echo "Linting check completed"

      - name: Display project info
        run: |
          echo "OSDU MCP Server development environment ready!"
          echo "Key commands:"
          echo "  - Test: uv run pytest"
          echo "  - Type check: uv run mypy ."
          echo "  - Format: uv run black src/ tests/"
          echo "  - Lint: uv run ruff check src/"
          echo "  - Run server: uv run osdu-mcp-server"
