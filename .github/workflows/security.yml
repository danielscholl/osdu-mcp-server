name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Mondays
    - cron: '0 0 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target' || github.event_name == 'pull_request'
    steps:
      - name: Checkout PR head
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
          persist-credentials: false

      - name: Checkout repository
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - uses: actions/dependency-review-action@v4
        continue-on-error: true  # Allow failure if Advanced Security not enabled
        with:
          fail-on-severity: moderate

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR head
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2
          persist-credentials: false

      - name: Checkout repository
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Install dependencies
        run: |
          uv sync --frozen
          uv pip install -e .[dev]

      - name: Install CycloneDX
        run: uv pip install cyclonedx-bom

      - name: Generate SBOM
        run: |
          uv run cyclonedx-py environment -o sbom.json
          echo "SBOM generated successfully"

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v5
        with:
          name: sbom-${{ github.sha }}
          path: sbom.json
          retention-days: 90

  codeql-analysis:
    name: CodeQL Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR head
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v5
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          persist-credentials: false

      - name: Checkout repository
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: python
          queries: security-and-quality
          config-file: .github/codeql/codeql-config.yml

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        with:
          category: "/language:python"
